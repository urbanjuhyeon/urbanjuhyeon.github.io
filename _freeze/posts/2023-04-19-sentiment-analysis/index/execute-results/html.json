{
  "hash": "b95da82963fe9c223665d2efe5b4c4f2",
  "result": {
    "markdown": "---\ntitle: \"한국어 감성 분석 비교: 구글 대 네이버\"\ndescription: |\n  대표적인 한국어 감성 분석 API를 제공하는 구글과 네이버 성능 비교\ndate: \"2023-04-19\"\ncategories: [R]\nimage: \"image/plot_conf_mat_naver.png\"\n---\n\n\n# 들어가기\n\n한국어 감서서\n**토픽모델링 주제와 메타데이터 사이의 공변량**를 분석한다. 메타데이터는 텍스트 외 주제와 관련될 수 있는 데이터를 말한다. 내담자 성별이나 상담 방법(유선상담 등)은 특정 주제가 많이 등장할 수도 있다. 이런 공변량(covariate)를 분석하며, 이는 stm 토픽모델링의 장점 중 하나다.\n\n------------------------------------------------------------------------\n\n# 1. 데이터 준비하기\n\n분석에 필요할 패키지를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  \"tidyverse\",  \"tidytext\", \"data.table\", \"knitr\", \"gt\", \"scales\", \"cvms\",\n  \"httr\", \"jsonlite\", \"future\", \"furrr\")\n```\n:::\n\n\n분석에 쓸 데이터를 [여기](data/sample.csv)에서 다운 받아 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndb_sent_1a <- fread('data/sample.csv')\n```\n:::\n\n\n데이터는 구글 리뷰 문장(sent_content)을 긍정과 중립, 부정으로 라벨링(label)하고 구글 자연어 처리의 감성분석 점수(score)로 구성된다.\n\n\n::: {.cell}\n::: {.cell-output-display}\n|sent_content              |label | senti_score_google|\n|:-------------------------|:-----|------------------:|\n|탁트인 한강 전망이 좋아요 |긍정  |                0.9|\n|물난리 후 첫주말에 갔는데 |중립  |               -0.1|\n|교통,주차 너무힘들어요    |부정  |                0.0|\n:::\n:::\n\n\n\n위 데이터에서 긍정과 중립, 부정을 각각 200개씩 무작위로 샘플링한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(777) # 난수 고정\n\ndb_sent_1b <- db_sent_1a %>% \n  group_by(label) %>% \n  sample_n(200) %>% ungroup() %>%\n  arrange(label) %>%\n  mutate(id = row_number())\n```\n:::\n\n\n# 2. 감성분석\n## 2.1. 네이버 감성분석\n### 감성분석 준비\nCLOVA Sentiment 서비스 설명과 가이드라인은 [여기](https://medium.com/naver-cloud-platform/%EC%9D%B4%EB%A0%87%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EC%84%B8%EC%9A%94-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EA%B0%90%EC%A0%95-%EB%B6%84%EC%84%9D-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-clova-sentiment-%ED%99%9C%EC%9A%A9%EA%B8%B0-5d9db7b0209b)에서 볼 수 있다. 콘솔 접속과 서비스 활성화, 인증정보 등을 따라하면 된다.\n\n### R을 활용한 네이버 감성분석\n아래 코드로 할당받은 네이버 감성분석 API를 활용하여 샘플 데이터를 감성분석한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define API endpoint and headers\nurl <- \"https://naveropenapi.apigw.ntruss.com/sentiment-analysis/v1/analyze\"\nclient_id = \"nqbdvhltg0\"\nclient_secret = \"32GT8wyL2jSoQVnq9QEsBkNI4BDrQztxONx8dVF2\"\n\nheaders_user <- c(\n  \"X-NCP-APIGW-API-KEY-ID\" = client_id,\n  \"X-NCP-APIGW-API-KEY\" = client_secret,\n  \"Content-Type\" = \"application/json\"\n)\n\ndb_sent_1c <- db_sent_1b %>%\n  group_split(id)\n\n\ndb_sent_2a <- rbindlist(\n  future_map(db_sent_1c, function(x){\n    \n    sent_content_input <- x$sent_content\n    \n    seti_analysis_respon <- POST(\n      url = \"https://naveropenapi.apigw.ntruss.com/sentiment-analysis/v1/analyze\",\n      body = toJSON(list(content = sent_content_input) , auto_unbox = TRUE, pretty = TRUE), \n      add_headers(.headers = headers_user),\n      encode = \"json\") %>% \n      content()\n    \n    doc_dt <- data.table(\n      doc_content = sent_content_input,\n      doc_senti = seti_analysis_respon$document$sentiment,\n      doc_confi_neg = seti_analysis_respon$document$confidence$negative,\n      doc_confi_posi = seti_analysis_respon$document$confidence$positive,\n      doc_confi_neut = seti_analysis_respon$document$confidence$neutral\n    )\n    \n    # create a data.table of sentence-level information\n    sent_dt <- data.table(\n      sent_content = sapply(seti_analysis_respon$sentences, function(x) x$content),\n      sent_offset = sapply(seti_analysis_respon$sentences, function(x) x$offset),\n      sent_length = sapply(seti_analysis_respon$sentences, function(x) x$length),\n      sent_sentiment = sapply(seti_analysis_respon$sentences, function(x) x$sentiment),\n      sent_confi_neg = sapply(seti_analysis_respon$sentences, function(x) x$confidence$negative),\n      sent_confi_posi = sapply(seti_analysis_respon$sentences, function(x) x$confidence$positive),\n      sent_confi_neut = sapply(seti_analysis_respon$sentences, function(x) x$confidence$neutral),\n      sent_highlight_offset = sapply(seti_analysis_respon$sentences, function(x) x$highlights[[1]]$offset),\n      sent_highlight_length = sapply(seti_analysis_respon$sentences, function(x) x$highlights[[1]]$length)\n    )\n    \n    print(\"end\")\n    \n    comb_dt <- cbind(id = x$id, doc_dt, sent_dt)\n    \n  }))\n```\n:::\n\n\n감성분석 결과는 다음과 같다. 여기서 doc와 senti로 시작하면 각각 문서와 그 문서를 구성하는 문장으로 나타낸다. 네이버 클로버 감성분석은 분석하는 문서(doc)의 문장을 자동으로 분류해준다.\n\n\n::: {.cell}\n::: {.cell-output-display}\n| id|doc_content                  |doc_senti | doc_confi_neg| doc_confi_posi| doc_confi_neut|sent_content                 | sent_offset| sent_length|sent_sentiment | sent_confi_neg| sent_confi_posi| sent_confi_neut| sent_highlight_offset| sent_highlight_length|\n|--:|:----------------------------|:---------|-------------:|--------------:|--------------:|:----------------------------|-----------:|-----------:|:--------------|--------------:|---------------:|---------------:|---------------------:|---------------------:|\n|  1|그늘도 많고 쉴자리도 많아요. |positive  |     0.0002367|       99.99958|      0.0001859|그늘도 많고 쉴자리도 많아요. |           0|          16|positive       |      0.0000142|       0.9999746|       0.0000112|                     0|                    15|\n|  2|공기좋음                     |positive  |     0.0367223|       99.95812|      0.0051644|공기좋음                     |           0|           4|positive       |      0.0022033|       0.9974868|       0.0003099|                     0|                     4|\n|  3|맑은하늘을 맘껏볼수있는곳    |positive  |     0.0001375|       99.99956|      0.0003061|맑은하늘을 맘껏볼수있는곳    |           0|          13|positive       |      0.0000083|       0.9999734|       0.0000184|                     0|                    13|\n:::\n:::\n\n\n## 2.2. 구글 감성분석\n구글 감성 분석은 [여기](https://brunch.co.kr/@mapthecity/25)에서 자세히 배울 수 있다. 네이버 감성분석과 같이 R를 활용하여 구글 감성 분석 API를 쓰는 방법은 추후에 업데이트하고자 한다.\n\n# 3. 감성분석 비교\n## 3.1. 분류 정확도 요약\n\n네이버 감성분석은 F1 점수가 0.84로 구글 감성분석 0.642보다 더 높았다.\n\n\n::: {.cell}\n::: {.cell-output-display}\n|지표              | 구글 감성분석| 네이버 감성분석|\n|:-----------------|-------------:|---------------:|\n|F1-score          |     0.6423675|       0.8404454|\n|Balanced Accuracy |     0.7362500|       0.8787500|\n:::\n:::\n\n\n\n## 3.2. 비교 데이터셋 만들기\n\n분석할 감성분석 결과 DB를 만들어준다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndb_sent_2b <- unique(db_sent_2a, by = \"id\") %>%\n  select(id, doc_senti)\n\ndb_sent_f <- db_sent_1b %>%\n  left_join(db_sent_2b, by = \"id\") %>%\n  mutate(\n    senti_label_google = case_when(\n      between(senti_score_google, 0.25, 1) ~ \"긍정\",\n      between(senti_score_google, -0.25, 0.25) ~ \"중립\",\n      TRUE ~ \"부정\"),\n    senti_label_naver = case_when(\n      doc_senti == \"positive\" ~ \"긍정\",\n      doc_senti == \"neutral\" ~ \"중립\",\n      TRUE ~ \"부정\")\n    ) %>%\n  select(id, sent_content, senti_label_google, senti_label_naver, label) %>%\n    mutate_at(c(\"senti_label_google\", \"senti_label_naver\", \"label\"), factor, levels = c(\"부정\", \"중립\", \"긍정\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nconf_mat_google <- confusion_matrix(\n  targets = db_sent_f$label,\n  predictions = db_sent_f$senti_label_google\n  )\n\nconf_mat_naver <- confusion_matrix(\n  targets = db_sent_f$label,\n  predictions = db_sent_f$senti_label_naver\n  )\n```\n:::\n\n\n\n## 3.3. 감성분석 상세\n### 구글 감성분석\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_confusion_matrix(conf_mat_google$`Confusion Matrix`[[1]], \n                      class_order = c(\"긍정\", \"중립\", \"부정\"),\n                      add_sums = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot_confusion_matrix(conf_mat_google$`Confusion Matrix`[[1]], :\n'ggimage' is missing. Will not plot arrows and zero-shading.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot_confusion_matrix(conf_mat_google$`Confusion Matrix`[[1]], :\n'rsvg' is missing. Will not plot arrows and zero-shading.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot_confusion_matrix(conf_mat_google$`Confusion Matrix`[[1]], :\n'ggnewscale' is missing. Will not use palette for sum tiles.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_confusion_matrix(conf_mat_naver$`Confusion Matrix`[[1]], \n                      class_order = c(\"긍정\", \"중립\", \"부정\"),\n                      add_sums = TRUE)  +\n  ggplot2::labs(title = \"네이버 감성분석 분류 정확도 결과\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot_confusion_matrix(conf_mat_naver$`Confusion Matrix`[[1]], :\n'ggimage' is missing. Will not plot arrows and zero-shading.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot_confusion_matrix(conf_mat_naver$`Confusion Matrix`[[1]], :\n'rsvg' is missing. Will not plot arrows and zero-shading.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot_confusion_matrix(conf_mat_naver$`Confusion Matrix`[[1]], :\n'ggnewscale' is missing. Will not use palette for sum tiles.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave('image/plot_conf_mat_naver.png', dpi = 300, width = 5.5, height = 5.5)\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}